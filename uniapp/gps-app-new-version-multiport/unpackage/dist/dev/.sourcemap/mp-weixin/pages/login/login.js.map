{"version":3,"sources":["uni-app:///main.js","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?c361","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?b7cd","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?6137","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?2522","uni-app:///pages/login/login.vue","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?0b56","webpack:///C:/Users/Dell/Desktop/pool/pool/uniapp/gps-app-new-version-multiport/pages/login/login.vue?d436"],"names":["createPage","Page"],"mappings":"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CA;AACA;AACA,gCAPA,EALA;;;;;;;;;;;;;AAyBA,wBAzBA;AA0BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,2BADA;AAEA,0BAFA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BALA,CAKA;AACA,aANA,EAMA,GANA;;AAQA,WArBA,MAqBA;AACA;AACA;AACA;AACA;AACA,SA3DA;AA4DA;AACA;AACA;AACA,kCADA;AAEA,wBAFA;;AAIA,SAlEA;;AAoEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/YA,GA9BA;AA+aA,QA/aA,oBA+aA;AACA;AACA;AACA,GAlbA;AAmbA,SAnbA,qBAmbA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA,0BADA;AAEA,wBAFA;;AAIA;AACA;AACA;AACA;AACA,SATA,MASA;AACA;;;;;AAKA;AACA;AACA,OAhCA;;;AAmCA;;;;;AAKA;AACA;AACA;AACA,wBADA;AAEA,sBAFA;;AAIA;AACA;AACA;AACA;AACA,OATA,MASA;AACA;;;;;AAKA;AACA;AACA,KAlBA;AAmBA,GAlfA;AAmfA,QAnfA,oBAmfA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,GAxgBA;AAygBA;;;;;;;;;;;AAWA,aAphBA,yBAohBA;AACA;AACA;AACA,GAvhBA,E;;;;;;;;;;;;;AC1HA;AAAA;AAAA;AAAA;AAAisC,CAAgB,kqCAAG,EAAC,C;;;;;;;;;;;ACArtC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/login/login.js","sourcesContent":["import 'uni-pages';\nimport Vue from 'vue'\nimport Page from './pages/login/login.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./login.vue?vue&type=template&id=b237504c&\"\nvar renderjs\nimport script from \"./login.vue?vue&type=script&lang=js&\"\nexport * from \"./login.vue?vue&type=script&lang=js&\"\nimport style0 from \"./login.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/login/login.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./login.vue?vue&type=template&id=b237504c&\"","var components\ntry {\n  components = {\n    uniPopup: function() {\n      return import(\n        /* webpackChunkName: \"components/uni-popup/uni-popup\" */ \"@/components/uni-popup/uni-popup.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./login.vue?vue&type=script&lang=js&\"","<template>\r\n    <view class=\"uni-container login-box\">\r\n        <view class=\"login-content\">\r\n            <view style=\"width: 100%;\">\r\n                <image src=\"../../static/login/loginbg.png\" style=\"width: 100%; height: 724rpx;\"></image>\r\n            </view>\r\n            \r\n            <view class=\"login-content-form\">\r\n                <!-- input组件:\r\n                       @blur=\"userIptBlur\": 输入框失去焦点时 触发的事件, 具体查看官网 \r\n                -->\r\n                <view class=\"form-username form-list-item\">\r\n\t\t\t\t\t<image src=\"../../static/login/yonghu.png\"></image>\r\n\t\t\t\t\t<text></text>\r\n                    <input type=\"text\" v-model=\"form_data.username\" @blur=\"userIptBlur\" placeholder-style=\"color:#ccc;font-size:38rpx;\" placeholder=\"请输入用户名\">\r\n                </view>\r\n                <view class=\"form-password form-list-item\">\r\n\t\t\t\t\t<image src=\"../../static/login/mima.png\"></image>\r\n\t\t\t\t\t<text></text>\r\n                    <input type=\"text\" password v-model=\"form_data.password\" @blur=\"wordIptBlur\" placeholder-style=\"color:#ccc;font-size:38rpx;\" placeholder=\"请输入密码\">\r\n                </view>\r\n                <view class=\"form-addcode form-list-item\">\r\n                    <image src=\"../../static/login/yanzhengma.png\" style=\"width: 56rpx;\"></image>\r\n\t\t\t\t\t<text></text>\r\n                    <input type=\"number\" v-model=\"form_data.addcode\" @blur=\"codeIptBlur\" placeholder-style=\"color:#ccc;font-size:38rpx;\" placeholder=\"请输入验证码\">\r\n                    <image @tap=\"prepareRamdonImage()\" :src=\"addcode_src\" style=\"width: 70px; height: 30px;\">\r\n                </view>\r\n            </view>\r\n            <view class=\"login-btn\">\r\n                <button type=\"warn\" @click=\"submitLogin\">登&nbsp;&nbsp;&nbsp;录</button>\r\n                <view class=\"btn-navigator\">\r\n                    <!-- <navigator :url=\"offline_page_url\" v-if=\"show_btn_offline\" open-type=\"navigate\" class=\"btn-offline\">离线操作</navigator> -->\r\n                    <navigator :url=\"forget_page_url\" open-type=\"navigate\" class=\"btn-forget\">忘记密码?</navigator>\r\n                </view>\r\n            </view>\r\n        </view>\r\n        <uni-popup :show=\"logout_popup\" type=\"center\" :custom=\"true\" :mask-click=\"false\">\r\n        \t<view class=\"uni-tip\">\r\n        \t\t<view class=\"uni-tip-title\">\r\n                    <view>退出应用</view>\r\n                 </view>\r\n        \t\t<view class=\"uni-tip-content\">您确定要退出应用吗？</view>\r\n        \t\t<view class=\"uni-tip-group-button\">\r\n        \t\t\t<view class=\"uni-tip-button\" @click=\"cancelQuitApp()\">\r\n                        <view class=\"btn-cancel\">\r\n                            取消\r\n                        </view>    \r\n                     </view>\r\n        \t\t\t<view class=\"uni-tip-button\" @click=\"confirmQuitApp()\">\r\n                        <view class=\"btn-confirm\">\r\n                            确定\r\n                        </view>\r\n                    </view>\r\n        \t\t</view>\r\n        \t</view>\r\n        </uni-popup>\r\n        \r\n        <!-- 设置网络连接弹框 -->\r\n        <uni-popup :show=\"set_network_popup\" type=\"center\" :custom=\"true\" :mask-click=\"false\">\r\n        \t<view class=\"uni-tip\">\r\n        \t\t<view class=\"uni-tip-title\">\r\n                    <view>温馨提示</view>\r\n                 </view>\r\n        \t\t<view class=\"uni-tip-content\">网络出错, 请检查网络配置</view>\r\n        \t\t<view class=\"uni-tip-group-button\">\r\n                    <view class=\"uni-tip-button\" @click=\"cancelSetNetwork()\">\r\n                        <view class=\"btn-cancel\">\r\n                            关闭\r\n                        </view>    \r\n                      </view>\r\n        \t\t\t<view class=\"uni-tip-button\" @click=\"confirmSetNetwork()\">\r\n                        <view class=\"btn-confirm\">\r\n                            设置网络\r\n                        </view>\r\n                    </view>\r\n        \t\t</view>\r\n        \t</view>\r\n        </uni-popup>\r\n        <!-- 更新app版本弹框 -->\r\n        <uni-popup :show=\"app_update_popup\" type=\"center\" :custom=\"true\" :mask-click=\"false\">\r\n        \t<view class=\"uni-tip\">\r\n        \t\t<view class=\"uni-tip-title\">\r\n                    <view>版本更新</view>\r\n                 </view>\r\n        \t\t<view class=\"uni-tip-content\">有新版本发布，是否进行新版本下载？</view>\r\n        \t\t<view class=\"uni-tip-group-button\">\r\n                    <view class=\"uni-tip-button\" @click=\"confirmQuitApp()\">\r\n                        <view class=\"btn-cancel\">\r\n                            退出应用\r\n                        </view>\r\n                     </view>\r\n        \t\t\t<view class=\"uni-tip-button\" @click=\"confirmUpdate()\">\r\n                        <view class=\"btn-confirm\">\r\n                            立即更新\r\n                        </view>\r\n                    </view>\r\n        \t\t</view>\r\n        \t</view>\r\n        </uni-popup>\r\n        <!-- app下载 进度 弹框 -->\r\n        <uni-popup :show=\"update_progress_popup\" type=\"center\" :custom=\"true\" :mask-click=\"false\">\r\n        \t<view class=\"uni-tip\">\r\n        \t\t<view class=\"uni-tip-title\">\r\n                    <view>升级APP</view>\r\n                 </view>\r\n        \t\t<view class=\"uni-tip-content\">\r\n                    <view>正在进行下载更新，请耐心等待。。。</view> \r\n                    <view style=\"margin-top: 5px;\">\r\n                        <view style=\"padding: 8px; color: #dc1110;\">已下载：{{download_progress}}%</view>\r\n                        <progress :percent=\"download_progress\" activeColor=\"#dc1110\" border-radius=\"5\" active active-mode=\"forwards\" stroke-width=\"10\" />\r\n                    </view>\r\n                </view>\r\n        \t</view>\r\n        </uni-popup>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n    // 弹框\r\n    import uniPopup from \"@/components/uni-popup/uni-popup.vue\"\r\n    import mixin from '@/common/mixin'\r\n    import md5 from '@/common/md5.min.js'\r\n    export default {\r\n        components:{\r\n            uniPopup\r\n        },\r\n        mixins: [mixin],\r\n        data() {\r\n            return {\r\n                show_btn_offline: false,\r\n                logo_url: '../../static/icon/logo.png',\r\n                offline_page_url: '/pages/offline/offline', // 离线操作页面路径\r\n                forget_page_url: '/pages/forgetPassWord/forgetPassWord', // 忘记密码页面路径\r\n                // 用户名 密码 验证码 数据\r\n                form_data: {\r\n                    username: '',\r\n                    password: '',\r\n                    addcode: ''\r\n                },\r\n                array: [],\r\n                province_date: [],\r\n                city_data: [],\r\n                county_data: [],\r\n                addcode_src: '',\r\n                logout_popup: false,\r\n                app_update_popup: false, // 显示 / 隐藏 更新app 弹框\r\n                download_url: '', // 新版本app下载地址\r\n                set_network_popup: false, // 显示 / 隐藏 设置网络 弹框\r\n                update_progress_popup: false, // 显示 / 隐藏 下载进度弹框\r\n                download_progress: 0, // 已下载的百分比\r\n            }\r\n        },\r\n        methods: {\r\n            /** 设置网络modal框: 关闭按钮 */\r\n            cancelSetNetwork() {\r\n                this.set_network_popup = false;\r\n            },\r\n            /** 设置网络modal框: 设置网络方法*/\r\n            confirmSetNetwork() {\r\n                // 隐藏之前显示的弹框\r\n                this.set_network_popup = false;\r\n                // 如果是ios机型, 操作 ios 机型的 wifi信息\r\n                if (this.my_platform == 'ios') {\r\n                    let UIApplication = plus.ios.import(\"UIApplication\");\r\n                    let NSURL = plus.ios.import(\"NSURL\");\r\n                    let setting = NSURL.URLWithString(\"app-settings:\");\r\n                    let application = UIApplication.sharedApplication();\r\n                    application.openURL(setting);\r\n                    // #ifdef APP-PLUS\r\n                    plus.ios.deleteObject(setting);\r\n                    plus.ios.deleteObject(application);\r\n                    // #endif    \r\n                } else {\r\n                    // 说明是安卓机型, 操作安卓机型的 wifi信息\r\n                    // 获取应用 注 Activity 实例对象\r\n                    // #ifdef APP-PLUS\r\n                    let main = plus.android.runtimeMainActivity()\r\n                    // importClass() 导入 java类对象, 这里导入的是 android.content.Intenet类对象\r\n                    let Intent = plus.android.importClass('android.content.Intent')\r\n                    // 当上面的对象 导入后 可以使用 new() 创建类的 实例对象\r\n                    let my_Intent = new Intent('android.settings.WIFI_SETTINGS')\r\n                    // 打开 创建的实例对象: 设置 wifi页面\r\n                    main.startActivity(my_Intent)\r\n                    // #endif    \r\n                }\r\n            },\r\n            /** 验证app应用 是否需要更新 */\r\n            isUpdate() {\r\n                let update_app_server = `${this.api}txnsysb06.ajson`;\r\n                /** runtime模块: getProperty(): 获取指定AppId对应的应用信息\r\n                 * 参数1: appid: \r\n                 * 参数2: 回调函数: \r\n                 * 回调参数: 内部保存着 appid/version/name/author/email/features属性  \r\n                 */\r\n                /** uni-app发送请求: uni.request(obj)\r\n                 * url: 接口地址\r\n                 * data: 请求参数\r\n                 * header: 设置请求的header\r\n                 * method: 请求方式, 默认为 GET\r\n                 * dataType: 期待的 响应体的 类型, 默认为json\r\n                 * success: 接口调用成功的回调\r\n                 */\r\n                // #ifdef APP-PLUS\r\n                plus.runtime.getProperty(plus.runtime.appid, (inf) => {\r\n                    uni.request({\r\n                        url: update_app_server,\r\n                        data: {\r\n                            \"input:app_type\": 0,\r\n                            \"input:version\": inf.version\r\n                        },\r\n                        type: 'GET',\r\n                        dataType: 'json',\r\n                        success: (res) => {\r\n                            console.log('检测更新', res);\r\n                            let {error_code, record} = res.data;\r\n                            if (error_code === '000000') {\r\n                                if (record[0].update_flag == '1') {\r\n                                    let note = record[0].note;\r\n                                    // 显示更新提示弹框\r\n                                    this.app_update_popup = true; \r\n                                    // 保存下载地址\r\n                                    this.download_url = record[0].url;\r\n                                }\r\n                            } else {\r\n                                this.toastRequestErr(res.data);\r\n                            }\r\n                        },\r\n                        fail: (err) => {\r\n                            this.toastErr();\r\n                        }\r\n                    })\r\n                })\r\n                // #endif\r\n            },\r\n            onStateChanged(download, status) {\r\n                // #ifdef APP-PLUS\r\n                // console.log(download)\r\n\t\t\t\tif(download.totalSize == 0){\r\n\t\t\t\t\tthis.download_progress = 0;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t this.download_progress = parseInt((download.downloadedSize / download.totalSize) * 100);\r\n\t\t\t\t}\r\n                // this.download_progress = Number(download.downloadedSize) / Number(download.totalSize) * 100\r\n                // #endif\r\n            },\r\n            /** 更新app应用: 创建下载任务  */\r\n            confirmUpdate() {\r\n\t\t\t\tif(this.download_url.length == 0 || this.download_url.indexOf(\"http\") == -1 || this.download_url.indexOf(\".apk\") == -1){\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t    title: '软件下载地址有误:'+this.download_url,\r\n\t\t\t\t\t    icon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n                // 隐藏之前显示的更新提示弹框\r\n                this.app_update_popup = false;\r\n                let filename = '_doc/download/';\r\n            \r\n                // 显示下载进度弹框\r\n                this.update_progress_popup = true\r\n                \r\n                // #ifdef APP-PLUS\r\n                let dtask = plus.downloader.createDownload(this.download_url, {\r\n                    filename: filename\r\n                },(d, status) => {\r\n                    // 回调函数参数:\r\n                        // d:download对象\r\n                        // status: 状态\r\n                    // 下载完成 \r\n                    if (status == 200) {\r\n                        // runtime模块: 管理运行环境\r\n                            // install() : 安装应用\r\n                                /** install(filePath, options, successCb, errorCb) 安装应用\r\n                                * 参数\r\n                                    * filePath: 必须参数, 要安装的文件路径\r\n                                    * options: 可选参数, 应用安装时设置的参数\r\n                                    * successCb: 可选 安装成功的回调\r\n                                    * errorCb: 可选 安装失败的回调\r\n                                */\r\n                        this.showToast('下载完成, 即将进行安装')\r\n                        this.update_progress_popup = false\r\n                        plus.runtime.install(d.filename, {}, () => {\r\n                        }, (DOMException) => {\r\n                            console.log(JSON.stringify(DOMException));\r\n                        });\r\n                    } else {\r\n                        this.update_progress_popup = false\r\n                        this.toastRequestErr(\"下载失败: \" + status);\r\n                        }\r\n                    }\r\n                );\r\n                // 开始下载的方法\r\n                dtask.addEventListener(\"statechanged\", this.onStateChanged, false);\r\n                dtask.start();\r\n                // #endif\r\n            },\r\n            /** 退出登录 */\r\n            confirmQuitApp() {\r\n                // 隐藏之前显示的弹框\r\n                this.set_network_popup = false;\r\n                this.app_update_popup = false;\r\n                // #ifdef APP-PLUS\r\n                plus.runtime.quit()\r\n                // #endif\r\n            },\r\n            /** 蓝牙操作: 登录后, 获取该用户下的所有 设备 蓝牙信息, 保存在客户端本地, 以便在没网时 蓝牙解锁/锁车/延期时 使用 */\r\n            getBleInfo() {\r\n                uni.request({\r\n                    url: `${this.api}txndab101.ajson`,\r\n                    data: {},\r\n                    dataType: 'json',\r\n                    success: (res) => {\r\n                        if (res.data.error_code === '000000') {\r\n                            console.log('获取蓝牙信息', res.data);\r\n                        }else {\r\n                            this.toastRequestErr(res.data);\r\n                        }\r\n                    },\r\n                    fail:() => {\r\n                        uni.showToast({\r\n                            title: '网络连接失败请重新尝试',\r\n                            icon: 'none'\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            /** 取消退出 */\r\n            cancelQuitApp() {\r\n                this.logout_popup = false;\r\n                this.showToast('已取消退出')\r\n            },\r\n            /** 生成验证码 */\r\n            prepareRamdonImage() {\r\n                let dd = new Date();\r\n                // #ifdef MP-WEIXIN\r\n                    uni.downloadFile({\r\n                        url: this.api + \"/eteral.main?txn-code=random&code-name=add-code=\" + dd.getTime() + \"&image-type=jpg\", //仅为示例，并非真实的资源\r\n                        success: (res) => {\r\n                            if (res.statusCode === 200) {\r\n                    \t\t\tconsole.log(res.tempFilePath, res) // 保存后的地址\r\n                                getApp().globalData.header.Cookie = res.header[\"Set-Cookie\"]\r\n                                this.addcode_src = res.tempFilePath;\r\n                            }\r\n                        }\r\n                    });\r\n                // #endif\r\n                // #ifdef APP-PLUS\r\n                    // 直接设置给src属性, src属性会进行发送请求, 原理跟jsonp跨域相似\r\n                    this.addcode_src = this.api + \"/eteral.main?txn-code=random&code-name=add-code=\" + dd.getTime() + \"&image-type=jpg\";\r\n                // #endif\r\n            },\r\n            /*  用户名输入框 @blur绑定的失去焦点事件\r\n                    参数event: 事件对象, event.target: 触发事件的对象, \r\n                    event.target.value: 获取到输入框的 值\r\n            */\r\n            userIptBlur(event) {\r\n                /* 验证用户名 输入的 合法性 */\r\n                this.form_data.username = event.target.value\r\n            },\r\n            wordIptBlur(event) {\r\n                /* 验证密码输入的合法性 */\r\n                this.form_data.password = event.target.value\r\n            },\r\n            codeIptBlur(event) {\r\n                /* */\r\n                this.form_data.addcode = event.target.value\r\n            },\r\n            /* 登录成功, 跳转到 地图页面 */\r\n            toMain() {\r\n                uni.switchTab({\r\n                    url: '/pages/tabBar/gps/globe'\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    /* navigator模块: 管理浏览器运行环境信息 \r\n                        closeSplashscreen(): 关闭应用启动界面 */\r\n                    // #ifdef APP-PLUS\r\n                    plus.navigator.closeSplashscreen()\r\n                    // #endif\r\n                }, 800)\r\n            },\r\n\r\n            /* 登录按钮绑定的点击事件 处理程序 */\r\n            submitLogin() {\r\n                let username = this.form_data.username.trim();\r\n                let password = this.form_data.password.trim();\r\n                let addcode = this.form_data.addcode.trim();\r\n                console.log('输入的验证码'+addcode);\r\n                if (!username) {\r\n                    this.showToast('请输入用户名');\r\n                    return\r\n                }\r\n                if (!password) {\r\n                    this.showToast('请输入密码');\r\n                    return\r\n                }\r\n                if (!addcode) {\r\n                    this.showToast('请输入验证码');\r\n                    return\r\n                }\r\n                uni.showLoading({\r\n                    title: '登录中, 请稍后'\r\n                })\r\n                \r\n                /*  发送请求  */\r\n                uni.request({\r\n                    url: `${this.api}txn999999.ajson`,\r\n                    // #ifdef MP-WEIXIN\r\n                    header: getApp().globalData.header,\r\n                    // #endif\r\n                    data: {\r\n                        user_no: username,\r\n                        // password: md5(password).toUpperCase(),\r\n                        password: password,\r\n                        add_code: addcode,\r\n                        // type: 1,\r\n                        /* device模块, 可以获取手机设备的相关信息 */\r\n                        /* os模块: 用来管理操作系统信息 */\r\n                        // #ifdef APP-PLUS\r\n                        \"mobile:vendor\": plus.device.vendor, // 生产厂商\r\n                        \"mobile:model\": plus.device.model, // 型号\r\n                        \"mobile:imei\": plus.device.imei, // 国际移动设备身份码\r\n                        \"mobile:imsi\": plus.device.imsi, // 国际移动用户识别码\r\n                        \"mobile:mobile_uid\": plus.device.uuid, // 设备唯一标识\r\n                        \"mobile:phone_vendor\": plus.device.vendor, // 还是生产厂商\r\n                        \"mobile:os_type\": plus.os.name, // 系统的名称\r\n                        \"mobile:version\": plus.os.version, // 系统的版本信息\r\n                        \"mobile:language\": plus.os.language, // 系统的语言信息\r\n                        // #endif\r\n                    },\r\n                    dataType: 'json',\r\n                    success: (res) => {\r\n                        console.log('登录', res ,res.data['error_code']);\r\n                        // #ifdef MP-WEIXIN\r\n                        getApp().globalData.header.Cookie += `; ${res.header[\"Set-Cookie\"]}`;\r\n                        // #endif\r\n                        let data = res.data;\r\n                        uni.hideLoading();\r\n                        if (res.data['error_code'] == \"000000\") {\r\n                            /** navigator模块: 用来管理浏览器运行环境的信息\r\n                                    getCookie(): 获取cookie  \r\n                             */\r\n                            uni.showToast({\r\n                                title: '登录成功',\r\n                                icon: 'none'\r\n                            })\r\n                            /* 将用户名 密码 登录状态 存储起来, 以便以后打开app 自动登录使用 */\r\n                            uni.setStorageSync(\"username\", username);\r\n                            uni.setStorageSync('password', password);\r\n                            // uni.setStorageSync(\"U:password\", md5(password).toUpperCase());\r\n                            // uni.setStorageSync(\"U:loginFlag\", \"true\");\r\n                            setTimeout(() => {\r\n                                /* 配置客户端标识 */\r\n                                // this.updateClient();\r\n\r\n                                /* 跳转到地图页面 */\r\n                                this.toMain(); // 登录成功时, 跳转到地图页面\r\n                            }, 500);\r\n\r\n                        } else {\r\n                            console.log('登录失败');\r\n                            this.prepareRamdonImage();\r\n                            this.toastRequestErr(res.data);\r\n                        }\r\n                    },\r\n                    fail: () => {\r\n                        uni.hideLoading();\r\n                        uni.showToast({\r\n                            title: '网络连接失败请重新尝试一下',\r\n                            icon: 'none'\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n\r\n            /* 配置客户端标识 */\r\n            // updateClient () {\r\n            //     let clientType = 0\r\n            //     // #ifdef APP-PLUS\r\n            //     /* 返回的客户端推送标识信息对象 */\r\n            //     console.log(plus.push.getClientInfo())\r\n            //     let myInfo = plus.push.getClientInfo()\r\n            //     if (myInfo.clientid) {\r\n            //         let clientId = myInfo.clientid\r\n            //         uni.setStorageSync('S:clientId', clientId)\r\n            //         uni.request({\r\n            //             // url: `${this.serverUrl}txnPYC206.ajax`,\r\n            //             url: `${this.api}txnPYC206.ajax`,\r\n            //             data: {\r\n            //                 \"input:client_id\": clientId,\r\n            //                 \"input:client_type\": clientType\r\n            //             },\r\n            //             success: function (data) {\r\n\r\n            //             },\r\n            //             error: function () {\r\n            //                 uni.showToast({\r\n            //                     title: '网络连接失败请重新尝试一下',\r\n            //                     icon: 'none'\r\n            //                 })\r\n            //             }\r\n            //         })\r\n            //     }\r\n            //     // #endif\r\n            // },\r\n\r\n\r\n            /* 获取 省市县区 json 数据, 保存在数据存储区中, 用于地区picker 选择器的 渲染 */\r\n            // getDistricts () {\r\n            //     let dqServer = `${this.api}/txnPYA240.ajax`           \r\n            //     uni.request({\r\n            //         url: dqServer,\r\n            //         data: {},\r\n            //         success: function (res) {\r\n            //             console.log(res)\r\n            //             let jsonObj = this.$x2js.xml2js(res.data).context\r\n            //             console.log('省市县地区json', jsonObj)\r\n            //             if (jsonObj['error-code'] === '000000') {\r\n            //                 let dq_json = jsonObj.districts\r\n            //                 // uni.setStorageSync(\"ZD:DQ:content\", dq_json)    \r\n            //                 console.log(JSON.parse(dq_json))\r\n\r\n            //                 this.array = JSON.parse(dq_json)\r\n            //                 this.array.forEach((item, index) => {\r\n            //                     /** 省 */\r\n            //                     this.province_date.push({\r\n            //                         label: item.text,\r\n            //                         value: item.value\r\n            //                     })\r\n            //                     this.county_data.push([])\r\n            //                     item.children.forEach((item1, index1) => {\r\n            //                         /** 市 */\r\n            //                         item1.label = item1.text\r\n            //                         delete item1.text\r\n            //                         item1.children.forEach((item2, index2) => {\r\n            //                             /** 县 */\r\n            //                             item2.label = item2.text\r\n            //                             delete item2.text\r\n            //                         })\r\n            //                         this.county_data[index].push(item1.children)\r\n            //                         delete item1.children\r\n            //                     })\r\n            //                     this.city_data.push(item.children)\r\n            //                 })\r\n            //                 console.log(this.province_date, this.city_data, this.county_data)\r\n            //                 uni.setStorageSync(\"ZD:DQ:province_date\", JSON.stringify(this.province_date))\r\n            //                 uni.setStorageSync(\"ZD:DQ:city_data\", JSON.stringify(this.city_data))\r\n            //                 uni.setStorageSync(\"ZD:DQ:county_data\", JSON.stringify(this.county_data))\r\n            //             }\r\n            //         }\r\n            //     })\r\n            // },\r\n        },\r\n        onShow() {\r\n            this.form_data.username = uni.getStorageSync('username');\r\n            this.form_data.password = uni.getStorageSync('password');\r\n        },\r\n        mounted() {\r\n            this.prepareRamdonImage()\r\n            this.form_data.username = uni.getStorageSync('username');\r\n            this.form_data.password = uni.getStorageSync('password');\r\n            uni.getNetworkType({\r\n                success:(res) => {\r\n                    /** 如果当前网络状态为 无网络: \r\n                     * 1. 进行确认消息框提示(文档中描述为: 显示模态弹框): uni.showModal(obj)\r\n                     * obj: \r\n                        * title: 必选, 提示的标题\r\n                        * content: 必选, 提示的内容\r\n                        * success: 接口调用成功的回调函数\r\n                        * showCancel: 是否显示取消按钮, 默认为true\r\n                        * cancelText: 取消按钮上 的文字, 默认为 取消, 最多可设置4个字符\r\n                        * cancelColor: 取消按钮的文字颜色, 默认为 #000000     \r\n                     * ......      \r\n                     * 2. 当用户点击确定按钮后: 显示手机设置网络界面\r\n                     * 3. 当用户点击退出按钮后: 退出应用\r\n                     */\r\n                    if (res.networkType == 'none') {\r\n                        uni.showToast({\r\n                            title: '无网络连接',\r\n                            icon: 'none'\r\n                        })\r\n                        // 显示网络设置提示弹框\r\n                        this.set_network_popup = true;\r\n                        this.show_btn_offline = true\r\n                        console.log('无网络连接')\r\n                    } else {\r\n                        this.show_btn_offline = false\r\n                        // #ifdef APP-PLUS\r\n                        // 检测应用是否需要更新\r\n                        // this.isUpdate()\r\n                        // #endif\r\n                        // this.prepareRamdonImage()\r\n                    }\r\n                }\r\n            })\r\n            \r\n            /* 监听网络状态发生改变: uni.onNetworkStatusChange(callback)\r\n             * 回调函数的参数:\r\n                * isConneected: 布尔值, 表示当前是否有网络连接(头条小程序不支持)\r\n                * networkTyoe: string: 当前网络类型 \r\n             */\r\n            uni.onNetworkStatusChange((res) => {\r\n                if (res.networkType == 'none') {\r\n                    uni.showToast({\r\n                        title: '无网络连接',\r\n                        icon: 'none'\r\n                    })\r\n                    // 显示网络设置提示弹框\r\n                    this.set_network_popup = true;\r\n                    this.show_btn_offline = true\r\n                    return\r\n                } else {\r\n                    this.show_btn_offline = false\r\n                    // #ifdef APP-PLUS\r\n                    // 检测应用是否需要更新\r\n                    // this.isUpdate()\r\n                    // #endif\r\n                    this.prepareRamdonImage()\r\n                }\r\n            })\r\n        },\r\n        onLoad() {\r\n            // this.prepareRamdonImage()\r\n            /* 5+ api 扩展:\r\n                1. device模块: 用来管理设备信息, 可以获取手机设备的相关信息\r\n                2. os模块: 用来管理操作系统信息\r\n                3. nativeUI模块: 用来管理系统原声界面\r\n                4. navigator模块: 用来管理浏览器运行环境的信息\r\n                5. storage模块: 管理应用本地数据存储区\r\n                6. runtime模块: 管理手机设备运行环境\r\n                7. downloader模块: 管理网络文件的下载任务\r\n            */\r\n            // this.getDistricts()\r\n            // if (this.my_platform == 'ios') {\r\n            //     // #ifdef APP-PLUS\r\n            //     plus.navigator.setFullscreen(true)\r\n            //     plus.screen.lockOrientation('portrait-primary')\r\n            //     // #endif\r\n            //     \r\n            //     /* 登录成功, 调用 toMain(), 跳转到大棚列表页面 */\r\n            //     this.toMain()\r\n            // }\r\n        },\r\n        /* 监听页面返回: onbackPress\r\n            当用户进行以下操作时, 会触发该函数:\r\n                1. android 实体返回键(from = backbutton)\r\n                2. 顶部导航栏左边的返回按钮(from = backbutton)\r\n                3. 返回API: 即: uni.navigateBack() (from = navigateBack)\r\n            注意事项: \r\n                1. 只有在该函数中的返回值为true 时, 才表示不执行默认的返回, 自行处理此时 的业务逻辑\r\n                2. 不返回或返回其他值, 均会执行默认的返回行为\r\n                3. H5平台, 顶部导航栏返回按钮支持 onbackPress(), 浏览器默认返回按键 以及 Android实体返回键不支持 onBackPress()\r\n                4. 暂不支持直接在自定义组件中配置该函数, 目前只能是在页面中进行处理        \r\n         */\r\n        onBackPress() {\r\n            this.logout_popup = true;\r\n            return true\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    @import '../../common/uni-nvue.css';\r\n    @import '../../common/common.css';\r\n    \r\n    .login-box {\r\n\t   padding: 0;\r\n       box-sizing: border-box;\r\n       height: 100%;\r\n       \r\n        .login-content {\r\n            width: 100%;\r\n            height: 100%;\r\n            box-sizing: border-box;\r\n         \r\n            /* 表单部分 */\r\n            .login-content-form {\r\n                width: 80%;\r\n                margin-left: 10%;\r\n                display: flex;\r\n                flex-direction: column;\r\n                font-size: 16px;\r\n\t\t\t\t\r\n\t\t\t\t.form-list-item{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tmargin-bottom: 50rpx;\r\n\t\t\t\t\tpadding-bottom: 18rpx;\r\n\t\t\t\t\tborder-bottom: 1px solid #ccc;\r\n\t\t\t\t\t\r\n\t\t\t\t\t&>image{\r\n\t\t\t\t\t\twidth: 50rpx;\r\n\t\t\t\t\t\theight: 50rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext{\r\n\t\t\t\t\t\theight: 26rpx;\r\n\t\t\t\t\t\tborder: 2rpx solid #ccc;\r\n\t\t\t\t\t\tborder-radius: 4rpx;\r\n\t\t\t\t\t\tmargin: 16rpx 20rpx 0 16rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                input {\r\n                    width: 70%;\r\n\t\t\t\t\tfont-size: 38rpx;\r\n                }\r\n                \r\n                .form-addcode {\r\n\t\t\t\t\tpadding-bottom: 0;\r\n                }\r\n            }\r\n        \r\n            /* 按钮部分 */\r\n            .login-btn {\r\n                width: 80%;\r\n                margin-left: 10%;\r\n                margin-top: 30rpx;\r\n                \r\n                button {\r\n                    font-size: 36rpx;\r\n                }\r\n                \r\n                /* 注册 忘记密码按钮 */\r\n                .btn-navigator {\r\n                    margin-top: 42rpx;\r\n                    font-size: 14px;\r\n                    color: #666;\r\n                    \r\n                    .btn-offline {\r\n                        float: left;\r\n                        font-size: 16px;\r\n                    }\r\n                    \r\n                    .btn-forget {\r\n                        float: right;\r\n                        font-size: 16px;\r\n\t\t\t\t\t\tcolor: #a1a1a1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        /* 提示窗口 */\r\n        .uni-tip {\r\n            padding: 40rpx 40rpx 60rpx 40rpx;\r\n            width: 600rpx;\r\n            background: #fff;\r\n            box-sizing: border-box;\r\n            border-radius: 20rpx;\r\n            \r\n            .uni-tip-title {\r\n                text-align: center;\r\n                font-weight: bold;\r\n                font-size: 32rpx;\r\n                color: #333;\r\n            }\r\n            \r\n            .uni-tip-content {\r\n                padding: 34rpx 0 80rpx 0;\r\n                font-size: 28rpx;\r\n                font-weight: bold;\r\n                text-align: center;\r\n            }\r\n            \r\n            .uni-tip-group-button {\r\n                display: flex;\r\n                padding: 0 8rpx;\r\n                \r\n                .uni-tip-button {\r\n                    flex: 1;\r\n                    display: flex;\r\n                    font-size: 26rpx;\r\n                    color: #3b4144;\r\n                    font-weight: 600;\r\n                    \r\n                    view {\r\n                        height: 64rpx;\r\n                        line-height: 64rpx;\r\n                        width: 168rpx;\r\n                        margin: auto;\r\n                        text-align: center;\r\n                        letter-spacing: 0;\r\n                    }\r\n                    \r\n                    .btn-confirm {\r\n                        color: #fff;\r\n                        background: #bd0202;\r\n                        border-radius: 32rpx;\r\n                        box-shadow: 0rpx 10rpx 10rpx 0rpx #d54048;\r\n                    }\r\n                    \r\n                    .btn-cancel {\r\n                        color: #bdbdbd;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n</style>\n","import mod from \"-!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--10-oneOf-1-0!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--10-oneOf-1-1!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--10-oneOf-1-2!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--10-oneOf-1-3!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\less-loader\\\\dist\\\\cjs.js??ref--10-oneOf-1-4!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--10-oneOf-1-5!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./login.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--10-oneOf-1-0!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--10-oneOf-1-1!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--10-oneOf-1-2!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--10-oneOf-1-3!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\less-loader\\\\dist\\\\cjs.js??ref--10-oneOf-1-4!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--10-oneOf-1-5!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilder\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./login.vue?vue&type=style&index=0&lang=less&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1614568728865\n      var cssReload = require(\"D:/HBuilder/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}